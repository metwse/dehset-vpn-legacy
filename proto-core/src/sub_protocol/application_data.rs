//! Payloads of the underlying application layer.
//!
//! Represents tunneled data flowing through established connections, including
//! initial connection requests, raw application data, and connection
//! termination messages.

use serde::{Deserialize, Serialize};

/// Definitions for transmitting application data at the protocol layer.
#[derive(Debug, Serialize, Deserialize)]
pub enum ApplicationDataEnum {
    /// Message sent from the client to request a connection to a specific port on
    /// a remote host.
    /// Connection ID generated by the client unique per in client.
    RequestConnection { token_id: u64, port: u16 },

    /// Message sent by the server to the client to initiate a tunneled
    /// connection. Connection ID generated by the server, which may differ from
    /// the client's `connection_id` in
    /// [`ApplicationDataEnum::RequestConnection`].
    NewConnection { port: u16 },

    /// Response from the port-sharing client to a
    /// [`ApplicationDataEnum::NewConnection`] payload. This message is
    /// forwarded by the server to the port-requesting client.
    Connection { accept: bool },

    /// Application-layer data sent over a tunneled connection.
    Data { payload: Vec<u8> },

    /// Payload indicating that the connection has been terminated.
    /// Can be sent by either the port-requesting or port-sharing client.
    TerminateConnection { reason: Option<String> },
}

/// Payload structure wrapping a application data message with an identifier.
#[derive(Debug, Serialize, Deserialize)]
pub struct ApplicationData {
    pub connection_id: u64,
    pub payload: ApplicationDataEnum,
}
